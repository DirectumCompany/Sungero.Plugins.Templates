<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Ниже код формирования manifest-файлов и пакетов с плагином.
    ВАЖНО. Следующий код не рекомендуется изменять.
  -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <PropertyGroup>
      <OutputDirectory>$(ProjectDir)\..\..\out\Client\</OutputDirectory>
      <LinuxRuntimeDirectory>$(ProjectDir)\..\..\redist\linux-dotnet-runtime\</LinuxRuntimeDirectory>
      <PluginManifestContent Condition="'$(BuildLinuxPlugin)' != 'true'">
{
  "Windows": {
    "{$(PluginId.ToUpper())}": "$(TargetFileName)"
  }
}
      </PluginManifestContent>
      <PluginManifestContent Condition="'$(BuildLinuxPlugin)' == 'true'">
{
  "Windows": {
    "{$(PluginId.ToUpper())}": "$(TargetFileName)"
  },
  "Linux": {
    "{$(PluginId.ToUpper())}": "$(TargetFileName)"
  }
}
      </PluginManifestContent>
      <PluginPackageManifestContent Condition="'$(BuildLinuxPlugin)' != 'true'">
[{
  "name": "$(AssemblyName)",
  "platform": "win32",
  "file": "plugins/$(AssemblyName)_win.zip",
  "preloaded": false,
  "version": "$(PluginVersion)",
  "guid": "$(PluginId.ToUpper())",
  "dependencies": ["cryptographyplugin"]
}]
      </PluginPackageManifestContent>
      <PluginPackageManifestContent Condition="'$(BuildLinuxPlugin)' == 'true'">
[{
  "name": "$(AssemblyName)",
  "platform": "win32",
  "file": "plugins/$(AssemblyName)_win.zip",
  "preloaded": false,
  "version": "$(PluginVersion)",
  "guid": "$(PluginId.ToUpper())",
  "dependencies": ["cryptographyplugin"]
},
{
  "name": "$(AssemblyName)",
  "platform": "linux64",
  "file": "plugins/$(AssemblyName)_linux.zip",
  "preloaded": false,
  "version": "$(PluginVersion)",
  "guid": "$(PluginId.ToUpper())",
  "dependencies": ["cryptographyplugin"]
}]
      </PluginPackageManifestContent>
    </PropertyGroup>
    <WriteLinesToFile File="$(OutputPath)\manifest.json" Lines="$(PluginManifestContent)" Overwrite="true"/>
    <MakeDir Directories="$(OutputDirectory)"/>
    <PropertyGroup>
      <TempDirectoryFramework>$(OutputDirectory)\tmp_frm\</TempDirectoryFramework>
      <TempDirectoryStandard>$(OutputDirectory)\tmp_std\</TempDirectoryStandard>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
      <TempPath>$(TempDirectoryFramework)$(OutputPath.Replace($(TargetFramework), &quot;&quot;))</TempPath>
      <ZipDestinationFile>$(OutputDirectory)\$(AssemblyName)_win.zip</ZipDestinationFile>
    </PropertyGroup>
    <PropertyGroup Condition="'$(TargetFramework.TrimEnd(`0123456789.`))' == 'netstandard'">
      <TempPath>$(TempDirectoryStandard)$(OutputPath.Replace($(TargetFramework), &quot;&quot;))</TempPath>
      <ZipDestinationFile>$(OutputDirectory)\$(AssemblyName)_linux.zip</ZipDestinationFile>
    </PropertyGroup>
    <PropertyGroup>
      <ZipSourcePath>$(TempPath)..\..\..\</ZipSourcePath>
    </PropertyGroup>
    <ItemGroup>
      <CopySourceFiles Include="$(OutputPath)*.*"/>
      <CopyLinuxRuntimeFiles Include="$(LinuxRuntimeDirectory)\**\*.*"/>
    </ItemGroup>
    <MakeDir Directories="$(ZipSourcePath)"/>
    <MakeDir Directories="$(TempPath)"/>
    <Copy SourceFiles="@(CopySourceFiles)" DestinationFolder="$(TempPath)"/>
    <Copy SourceFiles="@(CopyLinuxRuntimeFiles)" DestinationFolder="$(TempPath)\runtime\%(RecursiveDir)" Condition="'$(BuildLinuxPlugin)' == 'true' And '$(TargetFramework.TrimEnd(`0123456789.`))' == 'netstandard'"/>
    <ZipDirectory SourceDirectory="$(ZipSourcePath)" DestinationFile="$(ZipDestinationFile)" Overwrite="true"/>
    <WriteLinesToFile File="$(OutputDirectory)\$(AssemblyName).json" Lines="$(PluginPackageManifestContent)" Overwrite="true"/>
    <RemoveDir Directories="$(TempDirectoryFramework)" Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'"/>
    <RemoveDir Directories="$(TempDirectoryStandard)" Condition="'$(TargetFramework.TrimEnd(`0123456789.`))' == 'netstandard'"/>
  </Target>
</Project>
